/*
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 *  IMPORTS
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 */

// ----------------------------------------
// PACKAGE IMPORTS
// ----------------------------------------
import React, {Component} from 'react';

// ----------------------------------------
// LOCAL & CONFIG IMPORTS
// ----------------------------------------
import {Colors, Images} from '../../../../constants';

// ----------------------------------------
// COMPONENT IMPORTS
// ----------------------------------------
import Image from '../../../generics/Image';

/*
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 *  MAIN CLASS
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 */
export default class ImageIllustration extends Component {
  // ----------------------------------------
  // ----------------------------------------
  // CONSTRUCTOR AND LIFE CYCLES
  // ----------------------------------------

  shouldComponentUpdate(nextProps, nextState) {
    if (this.props !== nextProps) {
      return true;
    }

    return false;
  }

  // ----------------------------------------
  // ----------------------------------------
  // MAIN RENDER
  // ----------------------------------------

  render() {
    let data = null;
    let base = Images.illustration;

    if (this.props.name) {
      let splitNames = this.props.name.split('.');

      for (let x in splitNames) {
        if (!base[splitNames[x].trim()]) {
          base = null;
          break;
        }

        base = base[splitNames[x].trim()];
      }

      data = base;
    }

    return (
      <Image
        resizeMode={'contain'}
        {...this.props}
        source={data ? data : {}}
        default={this.props.default}
      />
    );
  }

  // ----------------------------------------
}
